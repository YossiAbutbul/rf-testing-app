{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yossefa\\\\OneDrive - Arad Technologies Ltd\\\\Documents\\\\GitHub\\\\rf-testing-app\\\\rf-testing-app\\\\src\\\\pages\\\\DevicesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/pages/devices.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DevicesPage = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('available');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Simulated device data based on your screenshot\n  useEffect(() => {\n    // This would be replaced with actual API calls in production\n    const mockDevices = [{\n      id: '00:B0:D0:63:C2:26',\n      name: 'Sonata LoRa IL',\n      status: 'connected'\n    }, {\n      id: '00:B0:D0:63:C2:26',\n      name: 'Sonata LoRa IL',\n      status: 'disconnected'\n    }, {\n      id: '00:B0:D0:63:C2:26',\n      name: 'Sonata LoRa IL',\n      status: 'disconnected'\n    }, {\n      id: '00:B0:D0:63:C2:26',\n      name: 'Sonata LoRa IL',\n      status: 'disconnected'\n    }, {\n      id: '00:B0:D0:63:C2:26',\n      name: 'Sonata LoRa IL',\n      status: 'disconnected'\n    }];\n    setDevices(mockDevices);\n  }, []);\n  const scanForDevices = () => {\n    setLoading(true);\n\n    // Simulate scanning delay\n    setTimeout(() => {\n      setLoading(false);\n      // In a real app, this would update with newly discovered devices\n    }, 2000);\n  };\n  const connectToDevice = deviceId => {\n    // Update the status of the selected device to 'connected'\n    const updatedDevices = devices.map(device => ({\n      ...device,\n      status: device.id === deviceId ? 'connected' : device.status\n    }));\n    setDevices(updatedDevices);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Device Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: scanForDevices,\n        disabled: loading,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-bluetooth btn-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), loading ? 'Scanning...' : 'Scan for Devices']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tab ${activeTab === 'available' ? 'active' : ''}`,\n        onClick: () => setActiveTab('available'),\n        children: \"Available Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tab ${activeTab === 'projects' ? 'active' : ''}`,\n        onClick: () => setActiveTab('projects'),\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"device-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          placeholder: \"Enter device name or MAC to search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-search search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary filter-button\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bx-filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"devices-list\",\n      children: devices.map((device, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"device-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"device-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bx-bluetooth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"device-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"device-name\",\n            children: device.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"device-id\",\n            children: device.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"device-actions\",\n          children: [device.status === 'connected' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection-status connected\",\n            children: \"Connected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary connect-button\",\n            onClick: () => connectToDevice(device.id),\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon-only\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bx bx-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(DevicesPage, \"SthsLJKS3vyiNQTUY8w0vH4XKa0=\");\n_c = DevicesPage;\nexport default DevicesPage;\nvar _c;\n$RefreshReg$(_c, \"DevicesPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DevicesPage","_s","activeTab","setActiveTab","devices","setDevices","loading","setLoading","mockDevices","id","name","status","scanForDevices","setTimeout","connectToDevice","deviceId","updatedDevices","map","device","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","placeholder","index","_c","$RefreshReg$"],"sources":["C:/Users/yossefa/OneDrive - Arad Technologies Ltd/Documents/GitHub/rf-testing-app/rf-testing-app/src/pages/DevicesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/pages/devices.css';\r\n\r\nconst DevicesPage = () => {\r\n  const [activeTab, setActiveTab] = useState('available');\r\n  const [devices, setDevices] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Simulated device data based on your screenshot\r\n  useEffect(() => {\r\n    // This would be replaced with actual API calls in production\r\n    const mockDevices = [\r\n      {\r\n        id: '00:B0:D0:63:C2:26',\r\n        name: 'Sonata LoRa IL',\r\n        status: 'connected'\r\n      },\r\n      {\r\n        id: '00:B0:D0:63:C2:26',\r\n        name: 'Sonata LoRa IL',\r\n        status: 'disconnected'\r\n      },\r\n      {\r\n        id: '00:B0:D0:63:C2:26',\r\n        name: 'Sonata LoRa IL',\r\n        status: 'disconnected'\r\n      },\r\n      {\r\n        id: '00:B0:D0:63:C2:26',\r\n        name: 'Sonata LoRa IL',\r\n        status: 'disconnected'\r\n      },\r\n      {\r\n        id: '00:B0:D0:63:C2:26',\r\n        name: 'Sonata LoRa IL',\r\n        status: 'disconnected'\r\n      }\r\n    ];\r\n    \r\n    setDevices(mockDevices);\r\n  }, []);\r\n\r\n  const scanForDevices = () => {\r\n    setLoading(true);\r\n    \r\n    // Simulate scanning delay\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      // In a real app, this would update with newly discovered devices\r\n    }, 2000);\r\n  };\r\n\r\n  const connectToDevice = (deviceId) => {\r\n    // Update the status of the selected device to 'connected'\r\n    const updatedDevices = devices.map(device => ({\r\n      ...device,\r\n      status: device.id === deviceId ? 'connected' : device.status\r\n    }));\r\n    \r\n    setDevices(updatedDevices);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"section-header\">\r\n        <h1>Device Management</h1>\r\n        <button className=\"btn btn-primary\" onClick={scanForDevices} disabled={loading}>\r\n          <i className=\"bx bx-bluetooth btn-icon\"></i>\r\n          {loading ? 'Scanning...' : 'Scan for Devices'}\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"tabs\">\r\n        <div \r\n          className={`tab ${activeTab === 'available' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('available')}\r\n        >\r\n          Available Devices\r\n        </div>\r\n        <div \r\n          className={`tab ${activeTab === 'projects' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('projects')}\r\n        >\r\n          Projects\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"device-search\">\r\n        <div className=\"search-input-container\">\r\n          <input \r\n            type=\"text\" \r\n            className=\"form-input\" \r\n            placeholder=\"Enter device name or MAC to search...\" \r\n          />\r\n          <i className=\"bx bx-search search-icon\"></i>\r\n        </div>\r\n        <button className=\"btn btn-secondary filter-button\">\r\n          <i className=\"bx bx-filter\"></i>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"devices-list\">\r\n        {devices.map((device, index) => (\r\n          <div key={index} className=\"device-card\">\r\n            <div className=\"device-icon\">\r\n              <i className=\"bx bx-bluetooth\"></i>\r\n            </div>\r\n            <div className=\"device-info\">\r\n              <div className=\"device-name\">{device.name}</div>\r\n              <div className=\"device-id\">{device.id}</div>\r\n            </div>\r\n            <div className=\"device-actions\">\r\n              {device.status === 'connected' ? (\r\n                <div className=\"connection-status connected\">Connected</div>\r\n              ) : (\r\n                <button \r\n                  className=\"btn btn-secondary connect-button\"\r\n                  onClick={() => connectToDevice(device.id)}\r\n                >\r\n                  Connect\r\n                </button>\r\n              )}\r\n              <button className=\"btn btn-icon-only\">\r\n                <i className=\"bx bx-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevicesPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,WAAW,CAAC;EACvD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,WAAW,GAAG,CAClB;MACEC,EAAE,EAAE,mBAAmB;MACvBC,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;IACV,CAAC,EACD;MACEF,EAAE,EAAE,mBAAmB;MACvBC,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;IACV,CAAC,EACD;MACEF,EAAE,EAAE,mBAAmB;MACvBC,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;IACV,CAAC,EACD;MACEF,EAAE,EAAE,mBAAmB;MACvBC,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;IACV,CAAC,EACD;MACEF,EAAE,EAAE,mBAAmB;MACvBC,IAAI,EAAE,gBAAgB;MACtBC,MAAM,EAAE;IACV,CAAC,CACF;IAEDN,UAAU,CAACG,WAAW,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BL,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACAM,UAAU,CAAC,MAAM;MACfN,UAAU,CAAC,KAAK,CAAC;MACjB;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMO,eAAe,GAAIC,QAAQ,IAAK;IACpC;IACA,MAAMC,cAAc,GAAGZ,OAAO,CAACa,GAAG,CAACC,MAAM,KAAK;MAC5C,GAAGA,MAAM;MACTP,MAAM,EAAEO,MAAM,CAACT,EAAE,KAAKM,QAAQ,GAAG,WAAW,GAAGG,MAAM,CAACP;IACxD,CAAC,CAAC,CAAC;IAEHN,UAAU,CAACW,cAAc,CAAC;EAC5B,CAAC;EAED,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrB,OAAA;MAAKoB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BrB,OAAA;QAAAqB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BzB,OAAA;QAAQoB,SAAS,EAAC,iBAAiB;QAACM,OAAO,EAAEb,cAAe;QAACc,QAAQ,EAAEpB,OAAQ;QAAAc,QAAA,gBAC7ErB,OAAA;UAAGoB,SAAS,EAAC;QAA0B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC3ClB,OAAO,GAAG,aAAa,GAAG,kBAAkB;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENzB,OAAA;MAAKoB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBrB,OAAA;QACEoB,SAAS,EAAE,OAAOjB,SAAS,KAAK,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC9DuB,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAAC,WAAW,CAAE;QAAAiB,QAAA,EAC1C;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNzB,OAAA;QACEoB,SAAS,EAAE,OAAOjB,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC7DuB,OAAO,EAAEA,CAAA,KAAMtB,YAAY,CAAC,UAAU,CAAE;QAAAiB,QAAA,EACzC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENzB,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BrB,OAAA;QAAKoB,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCrB,OAAA;UACE4B,IAAI,EAAC,MAAM;UACXR,SAAS,EAAC,YAAY;UACtBS,WAAW,EAAC;QAAuC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACFzB,OAAA;UAAGoB,SAAS,EAAC;QAA0B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACNzB,OAAA;QAAQoB,SAAS,EAAC,iCAAiC;QAAAC,QAAA,eACjDrB,OAAA;UAAGoB,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENzB,OAAA;MAAKoB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BhB,OAAO,CAACa,GAAG,CAAC,CAACC,MAAM,EAAEW,KAAK,kBACzB9B,OAAA;QAAiBoB,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACtCrB,OAAA;UAAKoB,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BrB,OAAA;YAAGoB,SAAS,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACNzB,OAAA;UAAKoB,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BrB,OAAA;YAAKoB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEF,MAAM,CAACR;UAAI;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChDzB,OAAA;YAAKoB,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEF,MAAM,CAACT;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACNzB,OAAA;UAAKoB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAC5BF,MAAM,CAACP,MAAM,KAAK,WAAW,gBAC5BZ,OAAA;YAAKoB,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBAE5DzB,OAAA;YACEoB,SAAS,EAAC,kCAAkC;YAC5CM,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACI,MAAM,CAACT,EAAE,CAAE;YAAAW,QAAA,EAC3C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,eACDzB,OAAA;YAAQoB,SAAS,EAAC,mBAAmB;YAAAC,QAAA,eACnCrB,OAAA;cAAGoB,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAtBEK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuBV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAhIID,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAkIjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}